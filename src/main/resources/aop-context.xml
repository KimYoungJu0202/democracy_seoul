<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- Load Resources -->
	<util:properties id="settings" location="classpath:/settings.properties" />

	<!-- Encryption Template -->
	<bean id="encryptionTemplate" class="kr.go.seoul.democracy.common.EncryptionTemplate">
		<constructor-arg value="#{settings['encryption.method']}" />
		<constructor-arg value="#{settings['encryption.key']}" />
	</bean>

	<!-- advice -->
	<bean id="encryptAdvice" class="kr.go.seoul.democracy.common.EncryptAdvice">
		<constructor-arg ref="encryptionTemplate" />
	</bean>

	<!-- config -->
	<aop:config>
		<!-- aspect -->
		<aop:aspect id="nonameAspect" ref="encryptAdvice">
			<!-- PointCut -->
			<aop:pointcut id="memberEncryptionPointCut" expression="execution(* kr..service.*.*Member(kr.go.seoul.democracy.common.model.vo.Member))"/>
			<aop:pointcut id="memberHashMapPointCut" expression="execution(* kr..service.*.*Member(java..HashMap))"/>
			<aop:pointcut id="allPointCut" expression="execution(* kr..*ServiceImpl.*(..))"/>
			<aop:pointcut id="testPointCut" expression="within(kr.go.seoul.democracy.test.service.*)"/>
			
			<aop:before method="encryptPasswordForMember" pointcut-ref="memberEncryptionPointCut" />
			<aop:before method="encryptPasswordForHashMap" pointcut-ref="memberHashMapPointCut" />

		</aop:aspect>
	</aop:config>
	
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
</beans>