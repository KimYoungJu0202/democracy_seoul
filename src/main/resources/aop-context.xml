<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- Load Resources -->
	<util:properties id="settings" location="classpath:/settings.properties" />

	<!-- Encryption Template -->
	<bean id="userEncryption" class="kr.go.seoul.democracy.common.EncryptionTemplate">
		<constructor-arg value="#{settings['user.encryption.method']}" />
		<constructor-arg value="#{settings['user.encryption.key']}" />
	</bean>
	<bean id="adminEncryption" class="kr.go.seoul.democracy.common.EncryptionTemplate">
		<constructor-arg value="#{settings['admin.encryption.method']}" />
		<constructor-arg value="#{settings['admin.encryption.key']}" />
	</bean>

	<!-- advice -->
	<bean id="userEncryptAdvice" class="kr.go.seoul.democracy.common.EncryptAdvice">
		<constructor-arg index="0" ref="userEncryption" />
		<constructor-arg index="1"> <!-- salt -->
			<list value-type="java.lang.String">
				<value>userId</value>
			</list>
		</constructor-arg>
		<constructor-arg index="2"> <!-- data -->
			<list value-type="java.lang.String">
				<value>userPwd</value>
				<value>userOriginalPass</value>
				<value>userNewPass</value>
				<value>memberPwd</value>
				<value>memberOriginalPass</value>
				<value>memberNewPass</value>
			</list>
		</constructor-arg>
	</bean>
	<bean id="adminEncryptAdvice" class="kr.go.seoul.democracy.common.EncryptAdvice">
		<constructor-arg index="0" ref="adminEncryption" />
		<constructor-arg index="1"> <!-- salt -->
			<list value-type="java.lang.String">
				<value>adminId</value>
			</list>
		</constructor-arg>
		<constructor-arg index="2"> <!-- data -->
			<list value-type="java.lang.String">
				<value>adminPwd</value>
				<value>adminOriginalPass</value>
				<value>adminNewPass</value>
			</list>
		</constructor-arg>
	</bean>

	<!-- config -->
	<aop:config>
		<!-- common Pointcut -->
		<aop:pointcut id="allPointCut" 							expression="execution(* kr..*ServiceImpl.*(..))" />
		<aop:pointcut id="allHashMapPointCut" 					expression="execution(* kr..service.*(java..HashMap))" />
		<aop:pointcut id="testPointCut" 						expression="execution(* kr..service.TestServiceImpl.*(..))" />

		<!-- user EncryptAdvice aspect -->
		<aop:aspect ref="userEncryptAdvice">
			<!-- PointCut -->
			<aop:pointcut id="memberEncryptionPointCut" 		expression="execution(* kr..member.model.service.*.*(kr.go.seoul.democracy.common.model.vo.Member))" />
			<!-- Weaving -->
			<aop:before method="encryptPasswordForMember" 		pointcut-ref="memberEncryptionPointCut" />
			<aop:before method="encryptPasswordForHashMap" 		pointcut-ref="allHashMapPointCut" />
		</aop:aspect>

		<aop:aspect ref="adminEncryptAdvice">
			<!-- PointCut -->
			<aop:pointcut id="adminEncryptionPointCut" 			expression="execution(* kr..admin.model.service.*.*(kr.go.seoul.democracy.admin.model.vo.Admin))" />
			<!-- Weaving -->
			<aop:before method="encryptPasswordForAdmin" 		pointcut-ref="adminEncryptionPointCut" />
			<aop:before method="encryptPasswordForHashMap" 		pointcut-ref="allHashMapPointCut" />
		</aop:aspect>
	</aop:config>

	<aop:aspectj-autoproxy />
	<!-- HitsAdvice -->
</beans>